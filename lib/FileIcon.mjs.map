{"version":3,"sources":["webpack://@aslamhus/fileicon/webpack/bootstrap","webpack://@aslamhus/fileicon/webpack/runtime/define property getters","webpack://@aslamhus/fileicon/webpack/runtime/hasOwnProperty shorthand","webpack://@aslamhus/fileicon/webpack/runtime/make namespace object","webpack://@aslamhus/fileicon/./src/FileIcon.js"],"names":[],"mappings":";SAAA;SACA;;;;;UCDA;UACA;UACA;UACA;UACA,wCAAwC,yCAAyC;UACjF;UACA;UACA,E;;;;;UCPA,wF;;;;;UCAA;UACA;UACA;UACA,sDAAsD,kBAAkB;UACxE;UACA,+CAA+C,cAAc;UAC7D,E;;;;;;;;;;;;ACNA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FileIcon.mjs","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// eslint-disable-next-line import/prefer-default-export\nexport class FileIcon {\n  constructor(\n    options = {\n      colors: null,\n      theme: null,\n    }\n  ) {\n    this.initThemes();\n    this.currentTheme = null;\n    this.colors = options.colors || this.themes.greyscale;\n    if (options.theme) this.setColorTheme(options.theme);\n  }\n\n  initThemes() {\n    this.themes = {\n      greyscale: {\n        bg: 'transparent',\n        iconBg: '#92a5ab',\n        textBg: '#6e7d82',\n        text: '#FFFFFF',\n      },\n      black: {\n        bg: 'transparent',\n        iconBg: '#000000',\n        textBg: '#000000',\n        text: '#FFFFFF',\n      },\n      white: {\n        bg: 'transparent',\n        iconBg: '#ffffff',\n        textBg: '#ffffff',\n        text: '#000000',\n      },\n      red: {\n        bg: 'transparent',\n        iconBg: '#be4646',\n        textBg: '#901d1d',\n        text: '#FFFFFF',\n      },\n      purple: {\n        bg: 'transparent',\n        iconBg: '#a040b8',\n        textBg: '#73178a',\n        text: '#FFFFFF',\n      },\n      blue: {\n        bg: 'transparent',\n        iconBg: '#2B73BA',\n        textBg: '#00458F',\n        text: '#FFFFFF',\n      },\n      lightBlue: {\n        bg: 'transparent',\n        iconBg: '#54cbed',\n        textBg: '#4198b3',\n        text: '#FFFFFF',\n      },\n      green: {\n        bg: 'transparent',\n        iconBg: '#00b36f',\n        textBg: '#03763b',\n        text: '#FFFFFF',\n      },\n      yellow: {\n        bg: 'transparent',\n        iconBg: '#fed12e',\n        textBg: '#bf9f30',\n        text: '#FFFFFF',\n      },\n      orange: {\n        bg: 'transparent',\n        iconBg: 'coral',\n        textBg: 'rgba(0,0,0,0.1)',\n        text: '#FFFFFF',\n      },\n      'greyscale-outline': {\n        bg: 'transparent',\n        iconBg: 'transparent',\n        textBg: 'transparent',\n        text: '#6e7d82',\n        outline: '#92a5ab',\n      },\n      'black-outline': {\n        bg: 'transparent',\n        iconBg: 'transparent',\n        textBg: 'transparent',\n        text: '#000000',\n        outline: '#000000',\n      },\n      'white-outline': {\n        bg: 'transparent',\n        iconBg: 'transparent',\n        textBg: 'transparent',\n        text: '#FFFFFF',\n        outline: '#FFFFFF',\n      },\n      'red-outline': {\n        bg: 'transparent',\n        iconBg: 'transparent',\n        textBg: 'transparent',\n        text: '#be4646',\n        outline: '#be4646',\n      },\n      'purple-outline': {\n        bg: 'transparent',\n        iconBg: 'transparent',\n        textBg: 'transparent',\n        text: '#a040b8',\n        outline: '#a040b8',\n      },\n      'blue-outline': {\n        bg: 'transparent',\n        iconBg: 'transparent',\n        textBg: 'transparent',\n        text: '#2B73BA',\n        outline: '#2B73BA',\n      },\n      'lightBlue-outline': {\n        bg: 'transparent',\n        iconBg: 'transparent',\n        textBg: 'transparent',\n        text: '#54cbed',\n        outline: '#54cbed',\n      },\n      'green-outline': {\n        bg: 'transparent',\n        iconBg: 'transparent',\n        textBg: 'transparent',\n        text: '#00b36f',\n        outline: '#00b36f',\n      },\n      'yellow-outline': {\n        bg: 'transparent',\n        iconBg: 'transparent',\n        textBg: 'transparent',\n        text: '#fed12e',\n        outline: '#fed12e',\n      },\n      'orange-outline': {\n        bg: 'transparent',\n        iconBg: 'transparent',\n        textBg: 'transparent',\n        text: 'coral',\n        outline: 'coral',\n      },\n    };\n  }\n\n  setColorTheme(theme) {\n    if (this.themes[theme]) {\n      this.colors = this.themes[theme];\n      this.currentTheme = theme;\n      return this.colors;\n    }\n    return null;\n  }\n\n  setColors(colors) {\n    if (typeof colors !== 'object') {\n      throw new TypeError('Expected setColors argument to be an object');\n    }\n    this.colors = colors;\n  }\n\n  create(ext, colors) {\n    return new Promise((resolve) => {\n      if (colors) this.colors = colors;\n      if (!this.colors) this.colors = this.themes.greyscale;\n      const canvas = this.createCanvas(ext);\n      canvas.toBlob((blob) => {\n        const img = this.blobToImg(blob);\n        resolve(img);\n      });\n    });\n  }\n\n  blobToImg(blob) {\n    if (!(blob instanceof Blob)) {\n      throw new Error('Invalid Argument Exception. blobToImg expected blob');\n    }\n    const url = URL.createObjectURL(blob);\n    const img = document.createElement('img');\n    if (this.currentTheme) {\n      img.dataset.theme = this.currentTheme;\n    }\n    img.src = url;\n    img.onload = () => {\n      URL.revokeObjectURL(blob);\n    };\n    return img;\n  }\n\n  createCanvas(ext) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 384;\n    canvas.height = 512;\n    const ctx = canvas.getContext('2d');\n    FileIcon.drawBg(canvas, ctx, this.colors.bg);\n    FileIcon.drawIcon(canvas, ctx, this.colors.iconBg, this.colors.outline);\n    FileIcon.drawTextBg(canvas, ctx, this.colors.textBg);\n    FileIcon.drawText(canvas, ctx, ext, this.colors.text);\n    return canvas;\n  }\n\n  static drawBg(canvas, ctx, color) {\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n  }\n\n  static drawTextBg(canvas, ctx, color) {\n    ctx.fillStyle = color;\n    ctx.fillRect(72, canvas.height - 190, 268, 120);\n  }\n\n  static drawText(canvas, ctx, ext, color) {\n    ctx.fillStyle = color;\n    ctx.font = '70px Arial';\n    ctx.font =\n      \"normal normal normal normal 15px/28px 'Helvetica Neue', Helvetica, Arial, sans-serif\";\n    ctx.font =\n      \"small-caps bold 80px 'HelveticaNeue',Helvetica,Arial,sans-serif\";\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = 'end';\n    ctx.fillText(ext, 320, canvas.height - 190 + 60, 240);\n  }\n\n  static drawIcon(canvas, ctx, hexcolor, outline) {\n    ctx.save();\n    ctx.strokeStyle = hexcolor;\n    if (outline) {\n      ctx.strokeStyle = outline;\n      ctx.lineWidth = 20;\n    } else {\n      ctx.lineWidth = 1;\n    }\n\n    ctx.miterLimit = 4;\n    ctx.scale(0.75, 0.75);\n    const x = (canvas.width - canvas.width * 0.75) * 0.75;\n    const y = (canvas.height - canvas.height * 0.75) * 0.75;\n    ctx.translate(x, y);\n    ctx.scale(1, 1);\n    ctx.save();\n    ctx.fillStyle = hexcolor || '#000000';\n    ctx.beginPath();\n    ctx.moveTo(224, 136);\n    ctx.lineTo(224, 0);\n    ctx.lineTo(24, 0);\n    ctx.bezierCurveTo(10.7, 0, 0, 10.7, 0, 24);\n    ctx.lineTo(0, 488);\n    ctx.bezierCurveTo(0, 501.3, 10.7, 512, 24, 512);\n    ctx.lineTo(360, 512);\n    ctx.bezierCurveTo(373.3, 512, 384, 501.3, 384, 488);\n    ctx.lineTo(384, 160);\n    ctx.lineTo(248, 160);\n    ctx.bezierCurveTo(234.8, 160, 224, 149.2, 224, 136);\n    ctx.closePath();\n    ctx.moveTo(384, 121.9);\n    ctx.lineTo(384, 128);\n    ctx.lineTo(256, 128);\n    ctx.lineTo(256, 0);\n    ctx.lineTo(262.1, 0);\n    ctx.bezierCurveTo(268.5, 0, 274.6, 2.5, 279.1, 7);\n    ctx.lineTo(377, 105);\n    ctx.bezierCurveTo(381.5, 109.5, 384, 115.6, 384, 121.9);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n    ctx.restore();\n  }\n\n  static draw1(ctx, hexcolor) {\n    ctx.save();\n    ctx.strokeStyle = 'rgba(50,50,50,1)';\n    ctx.lineCap = 'butt';\n    ctx.lineJoin = 'miter';\n    ctx.miterLimit = 2;\n    ctx.save();\n    ctx.fillStyle = hexcolor || '#000000';\n    ctx.beginPath();\n    ctx.moveTo(369.9, 97.9);\n    ctx.lineTo(286, 14);\n    ctx.bezierCurveTo(277, 5, 264.8, -0.1, 252.1, -0.1);\n    ctx.lineTo(48, -0.1);\n    ctx.bezierCurveTo(21.5, 0, 0, 21.5, 0, 48);\n    ctx.lineTo(0, 464);\n    ctx.bezierCurveTo(0, 490.5, 21.5, 512, 48, 512);\n    ctx.lineTo(336, 512);\n    ctx.bezierCurveTo(362.5, 512, 384, 490.5, 384, 464);\n    ctx.lineTo(384, 131.9);\n    ctx.bezierCurveTo(384, 119.2, 378.9, 106.9, 369.9, 97.9);\n    ctx.closePath();\n    ctx.moveTo(332.1, 128);\n    ctx.lineTo(256, 128);\n    ctx.lineTo(256, 51.9);\n    ctx.lineTo(332.1, 128);\n    ctx.closePath();\n    ctx.moveTo(48, 464);\n    ctx.lineTo(48, 48);\n    ctx.lineTo(208, 48);\n    ctx.lineTo(208, 152);\n    ctx.bezierCurveTo(208, 165.3, 218.7, 176, 232, 176);\n    ctx.lineTo(336, 176);\n    ctx.lineTo(336, 464);\n    ctx.lineTo(48, 464);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n    ctx.restore();\n  }\n}\n"],"sourceRoot":""}